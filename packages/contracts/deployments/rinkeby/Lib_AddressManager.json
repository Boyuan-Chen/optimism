{
  "address": "0xE8cbD28a5cc96ca86513ad8847D344EE634D0A9D",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldAddress",
          "type": "address"
        }
      ],
      "name": "AddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x27aa05e532a7b7702347f1ad9e6f5bcfe28d01ea64d7f6678153133a94db19ad",
  "receipt": {
    "to": null,
    "from": "0x2A2D5e9D1A0f3485f3D5c3fd983028E0f226FeD6",
    "contractAddress": "0xE8cbD28a5cc96ca86513ad8847D344EE634D0A9D",
    "transactionIndex": 12,
    "gasUsed": "628203",
    "logsBloom": "0x
    "blockHash": "0xb875aa7fdffa1e156575854a6b3d20fc41919ada488b9451be176c98c6bdf92f",
    "transactionHash": "0x27aa05e532a7b7702347f1ad9e6f5bcfe28d01ea64d7f6678153133a94db19ad",
    "logs": [
      {
        "transactionIndex": 12,
        "blockNumber": 9368181,
        "transactionHash": "0x27aa05e532a7b7702347f1ad9e6f5bcfe28d01ea64d7f6678153133a94db19ad",
        "address": "0xE8cbD28a5cc96ca86513ad8847D344EE634D0A9D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002a2d5e9d1a0f3485f3d5c3fd983028e0f226fed6"
        ],
        "data": "0x",
        "logIndex": 21,
        "blockHash": "0xb875aa7fdffa1e156575854a6b3d20fc41919ada488b9451be176c98c6bdf92f"
      }
    ],
    "blockNumber": 9368181,
    "cumulativeGasUsed": "3648985",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "57c40cf5c155d19ac0bd1dac14b9b230",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAddress(string)\":{\"params\":{\"_name\":\"Name to retrieve an address for.\"},\"returns\":{\"_0\":\"Address associated with the given name.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAddress(string,address)\":{\"params\":{\"_address\":\"Address to associate with the name.\",\"_name\":\"String name to associate an address with.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Lib_AddressManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddress(string)\":{\"notice\":\"Retrieves the address associated with a given name.\"},\"setAddress(string,address)\":{\"notice\":\"Changes the address associated with a particular name.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/resolver/Lib_AddressManager.sol\":\"Lib_AddressManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/libraries/resolver/Lib_AddressManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n/* External Imports */\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title Lib_AddressManager\\n */\\ncontract Lib_AddressManager is Ownable {\\n\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event AddressSet(\\n        string indexed _name,\\n        address _newAddress,\\n        address _oldAddress\\n    );\\n\\n\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    mapping (bytes32 => address) private addresses;\\n\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * Changes the address associated with a particular name.\\n     * @param _name String name to associate an address with.\\n     * @param _address Address to associate with the name.\\n     */\\n    function setAddress(\\n        string memory _name,\\n        address _address\\n    )\\n        external\\n        onlyOwner\\n    {\\n        bytes32 nameHash = _getNameHash(_name);\\n        address oldAddress = addresses[nameHash];\\n        addresses[nameHash] = _address;\\n\\n        emit AddressSet(\\n            _name,\\n            _address,\\n            oldAddress\\n        );\\n    }\\n\\n    /**\\n     * Retrieves the address associated with a given name.\\n     * @param _name Name to retrieve an address for.\\n     * @return Address associated with the given name.\\n     */\\n    function getAddress(\\n        string memory _name\\n    )\\n        external\\n        view\\n        returns (\\n            address\\n        )\\n    {\\n        return addresses[_getNameHash(_name)];\\n    }\\n\\n\\n    /**********************\\n     * Internal Functions *\\n     **********************/\\n\\n    /**\\n     * Computes the hash of a name.\\n     * @param _name Name to compute a hash for.\\n     * @return Hash of the given name.\\n     */\\n    function _getNameHash(\\n        string memory _name\\n    )\\n        internal\\n        pure\\n        returns (\\n            bytes32\\n        )\\n    {\\n        return keccak256(abi.encodePacked(_name));\\n    }\\n}\\n\",\"keccak256\":\"0x0faaea7d284026771ac72c6242886aab90f08caf4c96eade8214cacc6ba4dae3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6109f18061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780639b2ea4bd14610084578063bf40fac1146100a0578063f2fde38b146100d0575b600080fd5b6100646100ec565b005b61006e610174565b60405161007b9190610732565b60405180910390f35b61009e60048036038101906100999190610639565b61019d565b005b6100ba60048036038101906100b591906105f0565b610305565b6040516100c79190610732565b60405180910390f35b6100ea60048036038101906100e591906105c3565b61034a565b005b6100f4610442565b73ffffffffffffffffffffffffffffffffffffffff16610112610174565b73ffffffffffffffffffffffffffffffffffffffff1614610168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015f90610796565b60405180910390fd5b610172600061044a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101a5610442565b73ffffffffffffffffffffffffffffffffffffffff166101c3610174565b73ffffffffffffffffffffffffffffffffffffffff1614610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610796565b60405180910390fd5b60006102248361050e565b905060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836040516102be919061071b565b60405180910390207f9416a153a346f93d95f94b064ae3f148b6460473c6e82b3f9fc2521b873fcd6c84836040516102f792919061074d565b60405180910390a250505050565b6000600160006103148461050e565b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610352610442565b73ffffffffffffffffffffffffffffffffffffffff16610370610174565b73ffffffffffffffffffffffffffffffffffffffff16146103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90610796565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d90610776565b60405180910390fd5b61043f8161044a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081604051602001610521919061071b565b604051602081830303815290604052805190602001209050919050565b600061055161054c846107db565b6107b6565b90508281526020810184848401111561056d5761056c61090c565b5b610578848285610865565b509392505050565b60008135905061058f816109a4565b92915050565b600082601f8301126105aa576105a9610907565b5b81356105ba84826020860161053e565b91505092915050565b6000602082840312156105d9576105d8610916565b5b60006105e784828501610580565b91505092915050565b60006020828403121561060657610605610916565b5b600082013567ffffffffffffffff81111561062457610623610911565b5b61063084828501610595565b91505092915050565b600080604083850312156106505761064f610916565b5b600083013567ffffffffffffffff81111561066e5761066d610911565b5b61067a85828601610595565b925050602061068b85828601610580565b9150509250929050565b61069e81610833565b82525050565b60006106af8261080c565b6106b98185610828565b93506106c9818560208601610874565b80840191505092915050565b60006106e2602683610817565b91506106ed8261092c565b604082019050919050565b6000610705602083610817565b91506107108261097b565b602082019050919050565b600061072782846106a4565b915081905092915050565b60006020820190506107476000830184610695565b92915050565b60006040820190506107626000830185610695565b61076f6020830184610695565b9392505050565b6000602082019050818103600083015261078f816106d5565b9050919050565b600060208201905081810360008301526107af816106f8565b9050919050565b60006107c06107d1565b90506107cc82826108a7565b919050565b6000604051905090565b600067ffffffffffffffff8211156107f6576107f56108d8565b5b6107ff8261091b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061083e82610845565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610892578082015181840152602081019050610877565b838111156108a1576000848401525b50505050565b6108b08261091b565b810181811067ffffffffffffffff821117156108cf576108ce6108d8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6109ad81610833565b81146109b857600080fd5b5056fea2646970667358221220f1fa3db4bd83eb03e24e532c2ca857f9081060d19a01a4dd733d2e61dc2f2f5564736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780639b2ea4bd14610084578063bf40fac1146100a0578063f2fde38b146100d0575b600080fd5b6100646100ec565b005b61006e610174565b60405161007b9190610732565b60405180910390f35b61009e60048036038101906100999190610639565b61019d565b005b6100ba60048036038101906100b591906105f0565b610305565b6040516100c79190610732565b60405180910390f35b6100ea60048036038101906100e591906105c3565b61034a565b005b6100f4610442565b73ffffffffffffffffffffffffffffffffffffffff16610112610174565b73ffffffffffffffffffffffffffffffffffffffff1614610168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015f90610796565b60405180910390fd5b610172600061044a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101a5610442565b73ffffffffffffffffffffffffffffffffffffffff166101c3610174565b73ffffffffffffffffffffffffffffffffffffffff1614610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610796565b60405180910390fd5b60006102248361050e565b905060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836040516102be919061071b565b60405180910390207f9416a153a346f93d95f94b064ae3f148b6460473c6e82b3f9fc2521b873fcd6c84836040516102f792919061074d565b60405180910390a250505050565b6000600160006103148461050e565b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610352610442565b73ffffffffffffffffffffffffffffffffffffffff16610370610174565b73ffffffffffffffffffffffffffffffffffffffff16146103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90610796565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d90610776565b60405180910390fd5b61043f8161044a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081604051602001610521919061071b565b604051602081830303815290604052805190602001209050919050565b600061055161054c846107db565b6107b6565b90508281526020810184848401111561056d5761056c61090c565b5b610578848285610865565b509392505050565b60008135905061058f816109a4565b92915050565b600082601f8301126105aa576105a9610907565b5b81356105ba84826020860161053e565b91505092915050565b6000602082840312156105d9576105d8610916565b5b60006105e784828501610580565b91505092915050565b60006020828403121561060657610605610916565b5b600082013567ffffffffffffffff81111561062457610623610911565b5b61063084828501610595565b91505092915050565b600080604083850312156106505761064f610916565b5b600083013567ffffffffffffffff81111561066e5761066d610911565b5b61067a85828601610595565b925050602061068b85828601610580565b9150509250929050565b61069e81610833565b82525050565b60006106af8261080c565b6106b98185610828565b93506106c9818560208601610874565b80840191505092915050565b60006106e2602683610817565b91506106ed8261092c565b604082019050919050565b6000610705602083610817565b91506107108261097b565b602082019050919050565b600061072782846106a4565b915081905092915050565b60006020820190506107476000830184610695565b92915050565b60006040820190506107626000830185610695565b61076f6020830184610695565b9392505050565b6000602082019050818103600083015261078f816106d5565b9050919050565b600060208201905081810360008301526107af816106f8565b9050919050565b60006107c06107d1565b90506107cc82826108a7565b919050565b6000604051905090565b600067ffffffffffffffff8211156107f6576107f56108d8565b5b6107ff8261091b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061083e82610845565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610892578082015181840152602081019050610877565b838111156108a1576000848401525b50505050565b6108b08261091b565b810181811067ffffffffffffffff821117156108cf576108ce6108d8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6109ad81610833565b81146109b857600080fd5b5056fea2646970667358221220f1fa3db4bd83eb03e24e532c2ca857f9081060d19a01a4dd733d2e61dc2f2f5564736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getAddress(string)": {
        "params": {
          "_name": "Name to retrieve an address for."
        },
        "returns": {
          "_0": "Address associated with the given name."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAddress(string,address)": {
        "params": {
          "_address": "Address to associate with the name.",
          "_name": "String name to associate an address with."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Lib_AddressManager",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getAddress(string)": {
        "notice": "Retrieves the address associated with a given name."
      },
      "setAddress(string,address)": {
        "notice": "Changes the address associated with a particular name."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 393,
        "contract": "contracts/libraries/resolver/Lib_AddressManager.sol:Lib_AddressManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7757,
        "contract": "contracts/libraries/resolver/Lib_AddressManager.sol:Lib_AddressManager",
        "label": "addresses",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}